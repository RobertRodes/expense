#! /usr/bin/env ruby

require 'pg'
require_relative 'sql_print'

def show_help
  puts <<~HELP 
    $ ./expense
    An expense recording system

    Commands:

    add AMOUNT MEMO [DATE] - record a new expense
    clear - delete all expenses
    list - list all expenses
    delete NUMBER - remove expense with id NUMBER
    search QUERY - list expenses with a matching memo field
    HELP
end

def add_expenses
  return 'You must provide an amount and a memo.' unless ARGV[1] && ARGV[2]
  sql = <<~SQL
  INSERT INTO expenses (amount, memo, created_on)
    VALUES (
      #{ARGV[1]}, 
      '#{ARGV[2].gsub('\'', '\'\'')}', 
      #{ARGV[3].nil? ? 'DEFAULT' : '\'' + ARGV[3] + '\''}
    );
  SQL
  cn = PG.connect(dbname: 'expense')
  begin
    cn.exec(sql)
  rescue => err
    return 'Invalid date' if err.class.to_s =~ /date/i
    raise err
  end
  'INSERT succeeded'
end

def list_expenses
  cn = PG.connect(dbname: 'expense')
  rs = cn.exec('SELECT * FROM expenses;')
  sql_print rs
end

case ARGV.first
  when 'list' then 
    list_expenses
  when 'add' then 
    puts add_expenses
  else show_help
end
